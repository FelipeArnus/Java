package br.com.fiap;

import java.time.LocalDate;
import java.time.Period;

public class Aluno {
    private int rm;
    private String nome;
    private LocalDate dataDeNascimento;

    public Aluno(){} //Constructor vazio

    public Aluno(String nome, int rm, LocalDate dataDeNascimento){//Constructor com passagem de parametros
        this.nome = nome;
        this.rm = rm;
        this.dataDeNascimento = dataDeNascimento;
    }

    public int getRm() {
        return rm;
    }  
    public void setRm(int rm) {
        try {
            if (rm >= 97001 && rm <= 551999) {//Range de RM
                this.rm = rm;
            } else {
                throw new Exception("RM INVÁLIDO!");
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.exit(0);
        }

    }
    public String getNome() {
        return nome;
    }  
    public void setNome(String nome) {
        this.nome = nome;
    }
    public LocalDate getDataDeNascimento() {
        return dataDeNascimento;
    }
    public void setDataDeNascimento(LocalDate dataDeNascimento) {
        LocalDate minimo = LocalDate.parse("1899-12-31"); //Declara data minima
        LocalDate DataAtual = LocalDate.now(); //Declara Data atual
        try {
            if (dataDeNascimento.isAfter(minimo) && dataDeNascimento.isBefore(DataAtual)) {
                //Se data > 1899 e data < 2024 
            	this.dataDeNascimento = dataDeNascimento;
            } else {
                throw new Exception("A data deve estar entre (1900-01-01" + " e " + DataAtual + ")");

            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.exit(0);
        }
    }

    public String calculaIdadeCompleta(LocalDate dataAtual) {
        Period periodo = Period.between(dataDeNascimento, dataAtual);//subtrai a data atual pela data de nascimento 
        String idadeCompleta = periodo.getYears() + " anos, " + periodo.getMonths() + " meses e " + periodo.getDays() + " dias";
        return idadeCompleta;
    }
}
